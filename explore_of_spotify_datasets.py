# -*- coding: utf-8 -*-
"""explore of spotify_datasets.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/13FClY2Y3TcMTmOczm7j5Dc7g74Lwmbb3
"""

import pandas as pd
# from sqlalchemy import Column, Integer, String, create_engine
# from sqlalchemy.ext.declarative import declarative_base

df_track = pd.read_csv('https://raw.githubusercontent.com/vjmiyagi/DS_BuildWeek_Dec_2020/main/csv/data.csv')
df_artist = pd.read_csv('https://raw.githubusercontent.com/vjmiyagi/DS_BuildWeek_Dec_2020/main/csv/data_by_artist.csv')
df_genres = pd.read_csv('https://raw.githubusercontent.com/vjmiyagi/DS_BuildWeek_Dec_2020/main/csv/data_by_genres.csv')
df_year = pd.read_csv('https://raw.githubusercontent.com/vjmiyagi/DS_BuildWeek_Dec_2020/main/csv/data_by_year.csv')
df_track_genres = pd.read_csv('https://raw.githubusercontent.com/vjmiyagi/DS_BuildWeek_Dec_2020/main/csv/data_w_genres.csv')

print('Track \n')
print(df_track.info())
print(df_track.isnull().sum())

print('Artist \n')
df_artist.info()
print(df_artist.isnull().sum())

print('genres \n')
df_genres.info()
print(df_genres.isnull().sum())

print('Year \n')
df_year.info()
print(df_year.isnull().sum())

print('Track genres \n')
df_track_genres.info()
print(df_track_genres.isnull().sum())

print('Track genres value counts \n')
df_track_genres.artists.value_counts().to_frame()

df_track_genres.groupby('genres')['artists'].nunique()

print(df_track_genres.groupby('genres')['artists'].nunique().to_frame().sort_values(by='artists', ascending=False))

print(df_artist.shape)

df_genres.head()

df_genres['key'].value_counts()


# engine = create_engine('sqlite:///spotify.db')
# df_track_genres.to_sql(con=engine, index=False, name='genres', if_exists='replace')
# df_track.to_sql(con=engine, index=False, name='tracks', if_exists='replace')

# df_genres_artists = df_track_genres[["genres","artists"]]
# print(df_genres_artists)
# df_genres_artists.to_csv('genres_artists.csv',index=False)

print(df_genres.sort_values('popularity',ascending=False).head(50))

top100_genres = df_genres[['genres','popularity']].sort_values('popularity',ascending=False).head(100)
top100_genres.to_csv('/mnt/e/DataScience/Lambda/DS_BuildWeek_Dec_2020NEW/csv/top100_genres.csv',index=False)

# df_track.merge(df_track_genres,)

